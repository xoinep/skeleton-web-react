{"version":3,"sources":["screens/IntroductionScreen.js","screens/DownloadResultScreen.js","screens/HomeScreen.js","store/model.js","store/index.js","App.js","reportWebVitals.js","index.js"],"names":["Introduction","orientation","dataSource","renderItem","item","Item","style","textAlign","marginLeft","Text","mark","DownloadResultScreen","showResult","urls","useStoreState","state","model","getAndSetPcbToken","useStoreActions","actions","pcbToken","getPageSourceByPcbToken","useEffect","length","grid","gutter","xs","sm","md","lg","xl","xxl","controls","src","type","message","showIcon","description","action","size","danger","onClick","width","Header","Layout","Content","Footer","Sider","Search","Input","HomeScreen","loading","getPageSource","useState","setShowResult","spinning","direction","display","justifyContent","theme","mode","defaultSelectedKeys","placeholder","allowClear","onSearch","value","url","disabled","window","location","reload","baseURL","setLoading","payload","setUrls","pageSource","setPageSource","getUrlFromPageSource","ps","raw_url","exec","replaceAll","replace","thunk","a","axios","get","data","content","token","store","createStore","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.155d8e40.chunk.js","sourcesContent":["import { Typography, List, Divider } from \"antd\";\n\nconst Introduction = () => {\n  const steps = [\n    \"1. Copy Facebook post URL\",\n    \"2. Paste the URL in the text field below\",\n    \"3. Click the Download button\",\n  ];\n  return (\n    <>\n      <Divider orientation=\"left\">Free Facebook Video Downloader</Divider>\n      <List\n        dataSource={steps}\n        renderItem={(item) => (\n          <List.Item style={{ textAlign: \"left\", marginLeft: 50 }}>\n            <Typography.Text mark></Typography.Text> {item}\n          </List.Item>\n        )}\n      />\n    </>\n  );\n};\n\nexport default Introduction;\n","import { List, Divider, Alert, Button } from \"antd\";\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\nimport { useEffect } from \"react\";\nconst DownloadResultScreen = ({ showResult }) => {\n  const urls = useStoreState((state) => state.model.urls);\n  const getAndSetPcbToken = useStoreActions(\n    (actions) => actions.model.getAndSetPcbToken\n  );\n  const pcbToken = useStoreState((state) => state.model.pcbToken);\n  const getPageSourceByPcbToken = useStoreActions(\n    (actions) => actions.model.getPageSourceByPcbToken\n  );\n  useEffect(() => {\n    if (pcbToken != null) {\n      getPageSourceByPcbToken({ pcbToken: pcbToken });\n    }\n  }, [pcbToken]);\n\n  if (showResult) {\n    if (urls?.length > 0) {\n      return (\n        <>\n          <Divider orientation=\"left\">Available videos to download</Divider>\n          <List\n            grid={{\n              gutter: 16,\n              xs: 1,\n              sm: 2,\n              md: 2,\n              lg: 2,\n              xl: 6,\n              xxl: 2,\n            }}\n            dataSource={urls}\n            renderItem={(item) => (\n              <List.Item>\n                <video controls>\n                  <source src={item} type=\"video/mp4\" />\n                </video>\n              </List.Item>\n            )}\n          />\n        </>\n      );\n    } else {\n      if (urls == null) {\n        return (\n          <>\n            <Alert\n              message=\"Not lucky yet!!!\"\n              showIcon\n              description=\"We haven't found the video yet. Do you want to give us another chance by doing different search method? \"\n              type=\"error\"\n              action={\n                <Button\n                  size=\"small\"\n                  danger\n                  onClick={() => {\n                    getAndSetPcbToken();\n                  }}\n                >\n                  Try Again!\n                </Button>\n              }\n              width={80}\n            />\n          </>\n        );\n      } else {\n        return <></>;\n      }\n    }\n  } else {\n    return null;\n  }\n};\n\nexport default DownloadResultScreen;\n","import React, { useState } from \"react\";\nimport {\n  Layout,\n  Menu,\n  Space,\n  Spin,\n  Image,\n  Input,\n  Button,\n  Typography,\n} from \"antd\";\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\nimport Introduction from \"./IntroductionScreen\";\nimport DownloadResultScreen from \"./DownloadResultScreen\";\nconst { Header, Content, Footer, Sider } = Layout;\nconst { Search } = Input;\n\nconst HomeScreen = () => {\n  const loading = useStoreState((state) => state.model.loading);\n  const getPageSource = useStoreActions(\n    (actions) => actions.model.getPageSource\n  );\n  const [showResult, setShowResult] = useState(false);\n  const onSearch = (value) => {\n    setShowResult(true);\n    getPageSource({ url: value });\n  };\n  return (\n    <Spin spinning={loading}>\n      <Layout>\n        <Space direction=\"vertical\">\n          <Header style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"1\"]}>\n              <Menu.Item key=\"1\">Contact Us</Menu.Item>\n            </Menu>\n          </Header>\n          <Layout>\n            <Sider width={\"15%\"} theme=\"light\">\n              <Image src=\"https://longmaba-demo-bucket.s3-us-west-1.amazonaws.com/getfb.video/Yellow+and+Orange+Rectangles+Modern+Swiss+Business+Retractable+Exhibition+Banner.png\" />\n            </Sider>\n            <Content>\n              <Introduction></Introduction>\n              <br />\n              <div>\n                <Search\n                  placeholder=\"Input facebook video url\"\n                  allowClear\n                  onSearch={onSearch}\n                  style={{ width: \"90%\" }}\n                  disabled={showResult}\n                />\n              </div>\n              <div>\n                <DownloadResultScreen\n                  showResult={showResult}\n                ></DownloadResultScreen>\n              </div>\n            </Content>\n            <Sider width={\"15%\"} theme=\"light\">\n              <Image src=\"https://longmaba-demo-bucket.s3-us-west-1.amazonaws.com/getfb.video/Yellow+and+Orange+Rectangles+Modern+Swiss+Business+Retractable+Exhibition+Banner.png\" />\n            </Sider>\n          </Layout>\n\n          <Footer>\n            {(() => {\n              if (showResult) {\n                return (\n                  <Button\n                    onClick={() => {\n                      window.location.reload();\n                    }}\n                  >\n                    Download More\n                  </Button>\n                );\n              } else {\n                return null;\n              }\n            })()}\n          </Footer>\n        </Space>\n      </Layout>\n    </Spin>\n  );\n};\n\nexport default HomeScreen;\n","import { action, thunk } from \"easy-peasy\";\nimport axios from \"axios\";\n\nlet baseURL =\n  \"https://e8l09j4oja.execute-api.us-east-1.amazonaws.com/dev/get-pagesource?url=\";\nconst model = {\n  loading: false,\n  setLoading: action((state, payload) => {\n    state.loading = payload;\n  }),\n  urls: [],\n  setUrls: action((state, payload) => {\n    state.urls = payload;\n  }),\n  pageSource: null,\n  setPageSource: action((state, payload) => {\n    state.pageSource = payload;\n  }),\n  getUrlFromPageSource: action((state, payload) => {\n    const ps = state.pageSource;\n    const regEx = /video&quot;,&quot;src&quot;:&quot;(.*?)&quot;,&quot/;\n    let raw_url = regEx.exec(ps);\n    if (raw_url !== null) {\n      let url = raw_url[1].replaceAll(\"amp;\", \"\");\n      state.urls = [...state.urls, url.replace(/\\\\/g, \"\")];\n    } else {\n      state.urls = null;\n    }\n  }),\n  getPageSource: thunk(async (actions, payload) => {\n    const { url } = payload;\n    actions.setLoading(true);\n    const { data } = await axios.get(`${baseURL}${url}`);\n    actions.setPageSource(data.content);\n    actions.getUrlFromPageSource();\n    actions.setLoading(false);\n  }),\n  pcbToken: null,\n  getAndSetPcbToken: action((state, payload) => {\n    const ps = state.pageSource;\n    const regEx = /permalink:\"(.*?)\",setToken/;\n    let token = regEx.exec(ps);\n    state.pcbToken = token != null ? token[1] : null;\n  }),\n  getPageSourceByPcbToken: thunk(async (actions, payload) => {\n    actions.setLoading(true);\n    const { pcbToken } = payload;\n    let url = `https://m.facebook.com${pcbToken}`;\n    const { data } = await axios.get(`${baseURL}${url}`);\n    actions.setPageSource(data.content);\n    actions.getUrlFromPageSource();\n    actions.setLoading(false);\n  }),\n};\n\nexport default model;\n","import { createStore } from \"easy-peasy\";\nimport model from \"./model\";\n\nconst store = createStore({ model });\n\nexport default store;\n","import \"./App.css\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport { StoreProvider } from \"easy-peasy\";\nimport store from \"./store/index\";\nfunction App() {\n  return (\n    <StoreProvider store={store}>\n      <div className=\"App\">\n        <HomeScreen></HomeScreen>\n      </div>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}